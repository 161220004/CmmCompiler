// 地狱模式样例尝试

int; // 可以
int ai, bi, ci, di, ei[5], fi[7], gi[9];
float hf, lf, mf, nf[6], pf[8], qf[10];

struct HellS; // 可以

struct TmpS {
  int t[3][7];
} ts;

struct HellS1 {
  int ai, bi[5][6];
  float hf[10], lf;
  struct TmpS rs;
} rs, us;

struct {
  int aii, bii[3][4];
  float hff[9], lff;
  struct TmpS rss;
} ss;

struct HellS2 {
  int ci[2][3];
  float mf[4][5][6];
  struct { int ci; float TmpS; } ss;
} vs;

struct {int tt[2][1];} hellF1(int arg1, int arg2);
struct {int tt[2][1];} hellF1(int arg1, int arg2) {
  ts.t[1][2] = arg1;
  ts.t[4][3] = arg2;
  return ts;
}

// 一、定义声明部分
// 3) 错误类型3： 变量出现重复定义，或变量与前面定义过的结构体名字重复
int ai, ei; // 报错
float HellS1; // 报错
struct HellS2 hf; // 报错
int hellF5(int x, float x) {
  int x = 1, y = 2;
  return y;
}

// 4) 错误类型4： 函数出现重复定义（即同样的函数名出现了不止一次定义）
int hellF1() {
  return -1;
}

// 15) 错误类型15： 结构体中域名重复定义（指同一结构体中） ，或在定义时对域进行初始化（例如struct A { int a = 0; }）
struct HellS3 {
  int ai;
  float ai;
  int bi = 5;
} ws;
int hellF3(float arg1, int arg2) {
  ws.ai = arg1; // 可以
  ws.ai = arg2; // 报错
}

// 16) 错误类型16： 结构体的名字与前面定义过的结构体或变量的名字重复
struct HellS3 {
  int ci;
} xs;

// 18) 错误类型18： 函数进行了声明，但没有被定义
float hellF2();

// 19) 错误类型19： 函数的多次声明互相冲突（即函数名一致，但返回类型、形参数量或者形参类型不一致），或者声明与定义之间互相冲突
int hellF2();
float hellF4();
float hellF4(int arg1) {
  return 0.5;
}

// 二、使用部分
int main() {
  int ai = 1, bi = 2;
  float hf = 0.1, lf = 0.2;
  int am, bm[3], cm[4][5];
  float dm, em[6], fm[7][8];

  // 1) 错误类型1： 变量在使用时未经定义
  ci = am + bn;

  // 2) 错误类型2： 函数在调用时未经定义
  em = hellF(gi);

  // 5) 错误类型5： 赋值号两边的表达式类型不匹配
  bm = cm[2];
  em[1] = fm[5][6];
  cm = fm;
  am = vs;
  ss = rs;

  // 6) 错误类型6： 赋值号左边出现一个只有右值的表达式
  am + am = 56;
  hellF4() = 0.5;

  // 7) 错误类型7： 操作数类型不匹配或操作数类型与操作符不匹配（例如整型变量与数组变量相加减，或数组（或结构体）变量与数组（或结构体）变量相加减）
  (em + 9)[4] = 5.5;
  us = us + us;
  bm = bm + cm[0];

  // 8) 错误类型8： return语句的返回类型与函数定义的返回类型不匹配
  if (ai > 0) {
    return fm[3][4];
    return bm[0];
  } else {
    return -1;
  }

  // 9) 错误类型9： 函数调用时实参与形参的数目或类型不匹配
  hellF3(1.5, 6, 0);

  // 10) 错误类型10： 对非数组型变量使用“[…]” （数组访问）操作符
  dm = fm[1][2][3];

  // 11) 错误类型11： 对普通变量使用“(…)”或“()” （函数调用）操作符
  bi = bm(2);

  // 12) 错误类型12： 数组访问操作符“[…]” 中出现非整数（例如a[1.5]）
  am = cm[6][1.2];

  // 13) 错误类型13： 对非结构体型变量使用“.” 操作符
  am = rs.rs.t;
  am = ai.ai;

  // 14) 错误类型14： 访问结构体中未定义过的域
  am = xs.ci;
  am = ws.bi;
  am = xs.bi;
  am = ws.ci;
}
// 17) 错误类型17： 直接使用未定义过的结构体来定义变量
struct HellS os; // 报错
struct HellS0 {
  struct HellS0 hs0; // 报错
};
